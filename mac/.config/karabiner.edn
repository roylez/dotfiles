{
;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; Q  | right_command
;; CC | command
;; T  | left_control
;; W  | right_control
;; TT | control
;; O  | left_option
;; E  | right_option
;; OO | option
;; S  | left_shift
;; R  | right_shift
;; SS | shift
;; F  | fn
;; !! | hyper [:left_command :left_control :left_optional :left_shift ]
;; !A | hyper [:command :control :optional :shift ]
;; ## | optional any
;;
;; https://github.com/JoshuaManuel/Karabiner-Elements-Key-List
;;
;; rule [:period ["period-mode" 1] nil {:afterup ["period-mode" 0] :alone :period}]
;;       |_____| |_______________| |_| |_________________________________________|
;;        <from>    <to>      <conditions>         <other options>

:profiles { :Default
           { :default true
            ;; simultaneous_threshold_milliseconds (def: 50)
            ;; keys need to be pressed within this threshold to be considered simultaneous
            :sim     50
            ;; to_delayed_action_delay_milliseconds (def: 500)
            ;; basically it means time after which the key press is count delayed
            :delay   500
            ;; to_if_alone_timeout_milliseconds (def: 1000)
            ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
            :alone   200
            ;; to_if_held_down_threshold_milliseconds (def: 500)
            ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
            :held    1000
            }
           }

:templates {
            :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
            :open "open \"%s\""
            :app "open -a \"%s\""
            }

:devices {
          :apple [ { :vendor_id 1452 } ]
          :niz   [ { :vendor_id 1155 :product_id 21042 } ]  ;; Niz Plum atom68
          :logi  [ { :vendor_id 1133 :product_id 50475 } ]  ;; Logitech unifying devices
          }

:applications {
               :chrome ["^com\\.google\\.Chrome$", "^com\\.vivaldi\\.Vivaldi"]
               :terminal ["^com\\.github\\.wez\\.wezterm$", "^net\\.kovidgoyal\\.kitty$", "^com\\.apple\\.Terminal$"]
               }

:input-sources {
                :en {:input_source_id "^com\\.apple\\.keylayout.*" :language "en"}
                :zh {:language "^zh.*"}
                :sogou {:input_mode_id "^com\\.sogou\\.inputmethod.*" :language "^zh.*"}
                }

;; default is 250
:simlayer-threshold 300
:simlayers {
            ; :space_mode  { :key :spacebar }
            }

 :main [
        {:des "Niz Plum atom68 / Logitech keyboard modifications"
         :rules [
                 [:##right_alt :##right_control [:niz :logi] ]
                 ] }

        {:des "Screenshot with logitech mouses"
         :rules [
                 [{:pkey :button4} [:km "screenshot"] :logi ]
                 [{:pkey :button5} {:pkey :button4} :logi ]
                 ] }

        {:des "More function keys"
         :rules [
                 [:!CC1             :f1  ]
                 [:!CC2             :f2  ]
                 [:!CC3             :f3  ]
                 [:!CC4             :f4  ]
                 [:!CC5             :f5  ]
                 [:!CC6             :f6  ]
                 [:!CC7             :f7  ]
                 [:!CC8             :f8  ]
                 [:!CC9             :f9  ]
                 [:!CC0             :f10 ]
                 [:!CCopen_bracket  :f11 ]
                 [:!CCclose_bracket :f12 ]
                 ] }

        {:des "Capslock to hyper when held, to ESC when tapped, and switch to English as well if input method is Chinese"
         :rules [
                 [:##caps_lock :!CTOleft_shift :en {:alone :escape}]
                 [:##caps_lock :!CTOleft_shift :zh {:alone [:!Tspacebar :escape]}]
                 ]
         }
        {:des "Left alt single tap to send ctl-cmd-d for easy dictionary access"
         :rules [
                 [:left_alt :left_alt nil {:alone :!TCd}]]
         }
        ; too laggy to be useful
        ; {:des "Spacebar to left_shift when held"
        ;  :rules [[:spacebar :left_shift nil {:alone, :spacebar} ]] }
        {:des "Tap right shift twice to change input sources except in terminals"
         :rules [:!terminal
                 [:right_shift [:!Tspacebar ["change-input" 0]] ["change-input" 1]]
                 [:right_shift
                  [["change-input" 1] :right_shift]
                  ["change-input" 0] {:delayed {:invoked ["change-input" 0] :canceled ["change-input" 0]} :params {:delay 300}}]
                 ]
         }
        {:des "Tap left command twice to open kitty"
         :rules [
                 [:left_command [[:app "Kitty"] ["to-kitty" 0]] ["to-kitty" 1]]
                 [:left_command
                  [["to-kitty" 1] :left_command]
                  ["to-kitty" 0] {:delayed {:invoked ["to-kitty" 0] :canceled ["to-kitty" 0]} :params {:delay 300}}]
                 ]
         }
        {:des "Tap right command twice to open Vivaldi"
         :rules [
                 [:right_command [[:app "Vivaldi"] ["to-browser" 0]] ["to-browser" 1]]
                 [:right_command
                  [["to-browser" 1] :right_command]
                  ["to-browser" 0] {:delayed {:invoked ["to-browser" 0] :canceled ["to-browser" 0]} :params {:delay 300}}]
                 ]
         }
        ; {:des "Tap left shift twice to send <ESC>f in terminals"
        ;  :rules [:terminal
        ;          [:left_shift [:escape :f ["fzf-complete" 0]] ["fzf-complete" 1]]
        ;          [:left_shift
        ;           [["fzf-complete" 1] :left_shift]
        ;           ["fzf-complete" 0] {:delayed {:invoked ["fzf-complete" 0] :canceled ["fzf-complete" 0]} :params {:delay 300}}]] }
        {:des "Hyper+hjkl as up/down/left/right"
         :rules [
                 [:!!h :left_arrow  ]
                 [:!!j :down_arrow  ]
                 [:!!k :up_arrow    ]
                 [:!!l :right_arrow ]
                ]}
        {:des "Hyper+`/PageUp/PageDown as pause-play/volume-up/volume-down"
         :rules [
                 [:!!grave_accent_and_tilde :play_or_pause :niz ]
                 [:!!page_up                :volume_up     ]
                 [:!!page_down              :volume_down   ]
                 ] }
        ; {:des "SPACE mode"
        ;  :rules [
        ;          [:j :volume_decrement :space_mode]
        ;          [:k :volume_increment :space_mode]
        ;          [:m :mute             :space_mode]
        ;          [:h :rewind           :space_mode]
        ;          [:l :fastforward      :space_mode]
        ;          [:s :play_or_pause    :space_mode]
        ;          ] }
        ]
 }
