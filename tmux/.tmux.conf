# boolean variables
#
YANK="~/bin/tmux_yank.sh"
IS_VIM="ps -o state= -o comm= -t '#{pane_tty}'| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
IS_LOCAL='test -z "$SSH_CONNECTION" -o -f ~/.tty.local'

# Use Vi mode
setw -g mode-keys vi

# use xterm function key sequence
setw -g xterm-keys on

# fix for Mac pbcopy & pbpaste issues
if "command -v zsh" 'set -g default-command zsh'

# do not suspend tmux itself
unbind-key C-z

# change escape to c-a
set -g prefix C-a
unbind-key C-b
bind C-a send-prefix

# F11 and F12 to switch between windows
bind -n F11 previous-window
bind -n F12 next-window
# C-- could not be used, according to
# https://unix.stackexchange.com/questions/158278/tmux-how-do-i-bind-to-c-control-minus
bind -n M-- previous-window
bind -n M-= next-window

# C-c also create new window, like in screen
bind-key C-c new-window

# (prefix k) to kill window
unbind-key &
unbind-key C-k
unbind-key k
bind-key k confirm-before -p "Do you really want to kill #W? (y/n)"  kill-window

# use r to reload configuration
unbind r
bind r { source-file ~/.tmux.conf ; display "Configuration reloaded!" }

# copy / paste hacks
# set-clipboard helps to redirect to host machine clipboard over ssh.
set -g set-clipboard on
bind -T copy-mode-vi y     send -X copy-pipe-and-cancel "$YANK"
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "$YANK"
bind p paste-buffer

# # More straight forward key bindings for splitting
unbind-key %
bind-key | split-window -h -c '#{pane_current_path}'
unbind-key '"'
bind-key - split-window -v -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
bind-key -n C-h if "$IS_VIM" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if "$IS_VIM" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if "$IS_VIM" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if "$IS_VIM" "send-keys C-l"  "select-pane -R"

# Notifying if other windows has activities
set -g visual-bell on
set -g bell-action other

# let display messages stay longer
set -g display-time 3500

# Terminal emulator window title, set it to off so that we can use zsh to
# operate it
setw -g automatic-rename off

#altscreen
setw -g alternate-screen on

# start index from 1
set -g base-index 1

# set history size
set -g history-limit 20000

# terminal overrides for outside terminal
# color capabilities
set -g  terminal-overrides ',*88*:colors=88,*256*:colors=256,*256*:RGB'
# capabilities to change cursor shape
#  Ss   sets cursor shape
#  Se   resets cursor shape to default
set -ga terminal-overrides ',xterm*:Se=\E[2\sq,Ss=\E[%p1%d\sq'

# set the default TERM
# tmux uses /bin/sh -c to execute if-shell command,
# if sh is actually dash, the following will not work
if-shell '[[ ${TERM} =~ 256color || ${TERM} = xterm-kitty ]]' \
  { set -g default-terminal tmux-256color } \
  { set -g default-terminal tmux }
# update the TERM variable of terminal emulator when creating a new session or attaching a existing session
# be sure to restart tmux after setting this, reloading configuration does not work
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
# determine if we should enable 256-colour support
set-hook -g client-attached[0] 'if "[[ ${TERM} =~ 256color || ${TERM} == xterm-kitty ]]" "display -p \"TERM set to tmux-256oclor\"" "display -p \"TERM set to tmux\""'
set-hook -g client-attached[1] 'if "[[ ${TERM} =~ 256color || ${TERM} == xterm-kitty ]]" "set -g default-terminal tmux-256color" "set -g default-terminal tmux"'

# neovim friendliness
set -g escape-time 10         # setting it to zero might be a little risky
set -g focus-events on

# change message background color
set -g message-style 'fg=magenta,bg=default,bold,reverse'

# Set status bar
set -g status-justify centre
set -g status-bg terminal
set -g status-right-length 50
set -g status-left-length 20
set -g status-left "#[fg=cyan]:#[fg=blue]:#[fg=red][ #[fg=green,bold]#h#[default] #[fg=red]] "
set -g status-right "#[fg=red][ #[fg=yellow,bold]#(awk '{print $1,$2,$3}' /proc/loadavg) #[default]#[fg=red]]#[default]#[fg=blue]:#[fg=cyan]:#[default]"
# set window status style
# setw -g window-status-format         '#I #T '
# setw -g window-status-current-format '#I #T '
setw -g window-status-format         '#I#{?#{!=:#{window_panes},1},#[fg=red]+,}#[default] #T '
setw -g window-status-current-format '#I#{?#{!=:#{window_panes},1},#[bg=red]+,}#[default] #T '
setw -g window-status-style          'fg=blue,nobold,noreverse'
setw -g window-status-current-style  'fg=white,bold,reverse'
setw -g window-status-bell-style     'fg=yellow,nobold,noreverse'
setw -g window-status-activity-style 'fg=yellow,nobold,noreverse'

# highlight active panel
set -g pane-active-border-style 'fg=green,bold,bg=colour239'
set -g pane-border-style        'fg=black,bg=colour239'
set -g window-active-style      'fg=colour230,bg=terminal'
set -g window-style             'fg=colour244,bg=colour239'

# mouse support
set -g mouse off 

# disable local tmux session key bindings for nested experience
if "$IS_LOCAL" \
  "set -g status-position bottom" \
  "set -g status-position top"
bind F6 if "$IS_LOCAL" \
  "set prefix None ; set key-table off ; setw window-status-current-style 'fg=red,bg=default,bold,reverse' ; refresh-client -S"

# pane resizing mode
# C-a m  -   Enter pane resizing mode, key-table set to pane-resize
# ESC    -   Exist pane resizing mode
unbind m
bind -T prefix -N "start pane resizing" m {
  set key-table pane-resize
  set prefix None
  display "PANE RESIZING started"
  }
bind -T pane-resize -N "stop pane resizing" Escape {
  set key-table root
  set prefix C-a
  display "PANE RESIZING stopped"
  }
bind -T pane-resize h resize-pane -L 5
bind -T pane-resize l resize-pane -R 5
bind -T pane-resize j resize-pane -D 5
bind -T pane-resize k resize-pane -U 5

# TPM goodies
#   git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'laktak/extrakto'
# set -g @extrakto_default_opt 'pu'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# # set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-yank'
# # set -g @plugin 'tmux-plugins/tmux-continuum'
#
# run '~/.tmux/plugins/tpm/tpm'
