# vim: ft=snippets
snippet ssl "generate a ssl key pair" b
cat > ${1:admin}-csr.json <<EOF
{
  "CN": "$1",
  "key": {
    "algo": "rsa",
    "size": 2048
  },
  "names": [
    {
      "C": "US",
      "L": "Portland",
      "O": "${2:system:masters}",
      "OU": "Blah Blah",
      "ST": "Void"
    }
  ]
}
EOF

cfssl gencert \
  -ca=ca.pem \
  -ca-key=ca-key.pem \
  -config=ca-config.json \
  -profile=kubernetes \
  ${3:-hostname=10.32.0.1,10.240.0.10,10.240.0.11,10.240.0.12,${KUBERNETES_PUBLIC_ADDRESS},127.0.0.1,kubernetes.default \ }
  $1-csr.json | cfssljson -bare $1

endsnippet

snippet kubeconfig-kubelet "kubeconfig for a kubelet" b
kubectl config set-cluster ${1:cluster} \
  --certificate-authority=ca.pem \
  --embed-certs=true \
  --server=https://${3:KUBERNETES_PUBLIC_ADDRESS}:6443 \
  --kubeconfig=${2:instance}.kubeconfig

kubectl config set-credentials system:node:$2 \
  --client-certificate=$2.pem \
  --client-key=$2-key.pem \
  --embed-certs=true \
  --kubeconfig=$2.kubeconfig

kubectl config set-context default \
  --cluster=$3 \
  --user=system:node:$2 \
  --kubeconfig=$2.kubeconfig

kubectl config use-context default --kubeconfig=$2.kubeconfig
endsnippet

