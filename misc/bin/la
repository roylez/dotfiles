#!/bin/bash

ledger_file=${LEDGER_ROOT}/data/`date +%Y`.ledger

DEFAULT_ACCOUNT1=Expenses:Grocery
DEFAULT_ACCOUNT2=Assets:Spend

DEFAULT_DATE=$(tail $ledger_file| awk '/^20/ {d=$1} END {print d}')

editor=${EDITOR:-vim}

create_transaction() {
  echo -e "\n$*" >> "$ledger_file"
  [[ $? -eq 0 ]] && echo -e "\n成功添加到 $ledger_file"
}

read_title() {
  while [[ -z $title ]] ; do
    echo -ne "請輸入標題，回車搜索：   "
    title=$(
      awk '/^2[0-9]{3}-/ {$1=""; if ($2=="*") {$2=""}; gsub("^ +", ""); a[$0]++} END {for(i in a) {print a[i], i}}' $LEDGER_ROOT/data/*.ledger \
        | sort -nr \
        | cut -d" " -f2- \
        | fzf-tmux -p --prompt '標題> '
    )
  done
  echo -ne "\e[u\e[1A"
  echo $title
}

read_date() {
  echo -ne "請輸入日期[${date}]： \e[s"
  read -r new_date
  echo -ne "\e[u\e[1A"
  date=${new_date:-$date}
}

date=${date:-$DEFAULT_DATE}

create_next_entry() {
  local account1 account2 amount title

  while [[ -z $title ]] ; do
    echo -n "請輸入標題：      "
    title=$(
      awk '/^2[0-9]{3}-/ {$1=""; if ($2=="*") {$2=""}; gsub("^ +", ""); a[$0]++} END {for(i in a) {print a[i], i}}' $LEDGER_ROOT/data/*.ledger \
        | sort -nr \
        | cut -d" " -f2- \
        | fzf-tmux +s -p --header '[CTRL-C] abort' --bind 'ctrl-c:become(exit 99)' --prompt '標題> '
    )
    case $? in
      99)  return ;;
      130) echo "輸入有誤，請重試" ;;
      0)   echo $title ;;
    esac
  done

  while [[ -z "$account1" ]]; do
    echo -n "請選擇消費賬戶：  "
    account1=$(
      ledger accounts --count expenses and @"$title" \
        |grep -v '<' \
        |sort -nr \
        |cut -d" " -f2- \
        |fzf-tmux +s -p --header '[CTRL-C] abort' --bind 'ctrl-c:become(exit 99)' --prompt '賬戶> '
      )
    case $? in
      99)  return ;;
      130) echo "輸入有誤，請重試" ;;
      0)   echo $account1 ;;
    esac
  done

  while [[ -z "$account2" ]]; do
    echo -n "請選擇支出賬戶：  "
    account2=$(
      ledger accounts --count \( assets or liabilities \) and @"$title" \
        |grep -v '<' \
        |sort -nr \
        |cut -d" " -f2- \
        |fzf-tmux +s -p --prompt '賬戶> '
      )
    case $? in
      99)  return ;;
      130) echo "輸入有誤，請重試" ;;
      0)   echo $account2
    esac
  done

  while [[ -z "$amount" ]]; do
    read -r -p "請輸入金額：      " amount
  done

  echo

  draft=$(ledger entry -- "$date" "$title" "$account1" "\$ $amount" "$account2")

  if [ -n "$draft" ]; then
    echo 建立模板如下：
    echo
    echo -e "\e[1m$draft\e[m"
    echo

    read -n 1 -p "確認添加？[Y|n] " create
    case $create in
      [yY] )
        echo -e "\n$draft" >> "$ledger_file"
        echo -e "\n添加成功"
        ;;
      "" )
        echo -e "\n$draft" >> "$ledger_file"
        echo "添加成功"
        ;;
      * )
        echo -e "\n放棄添加"
        ;;
    esac
  else
    echo "輸入有誤"
  fi
}

while true; do
  read -p "當前日期 $date，添加新紀錄？ [Y|e|n|MM.DD] " response
  case $response in

    [nqNQ] )
      echo 再見
      exit ;;

    [eE] )
      echo 手工編輯
      $editor $ledger_file ;;

    [01][0-9].[0-3][0-9] | [01][0-9]-[0-3][0-9] )
      date=$response

      create_next_entry
      ;;

    [yY] | "" )
      create_next_entry
      ;;

    * )
      echo -e "\n錯誤回答，請重試"
      ;;
  esac

  echo
done
