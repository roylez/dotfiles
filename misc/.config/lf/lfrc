# vim: ft=conf
#
set shell zsh
set shellopts '-ey'
set drawbox on
set tabstop 4
# mc style
set nopreview
set ratios 1:2
set info size:time
set icons on
# automatically reload every 2 seconds
set period 2
# set icons on

# CUSTOM COMMANDS
#
cmd open ${{
  case $(file --mime-type -bL "$f"):${f:t:e} in
    text/x-*|application/json:*) $EDITOR "$f";;
    text/*) $PAGER "$f";;
    *:pages) $OPENER "$f";;
    application/x-tar:*) lf -remote "send $id untar" ;;
    application/x-7z*) lf -remote "send $id untar" ;;
    application/*zip:*) lf -remote "send $id untar" ;;
    application/x-rar:*) lf -remote "send $id untar" ;;
    *) $OPENER "$f";;
  esac
}}

cmd fzf_jump ${{
  res="$(fd -t d -d 2 |fzf --info=inline --prompt='> JUMP TO:  ')" || true
    if [ -d "$res" ]; then
      cmd="cd"
    else
      cmd="select"
    fi
  lf -remote "send $id $cmd \"$res\""
}}

cmd autojump %{{ 
  lf -remote "send $id cd '$(zoxide query $1)'"
}}

cmd untar !{{
  case "$f" in
    *.tar.*)                   tar xvf "$f";;
    *.zip|*.7z|*.lzma|*.rar)   7z x "$f";;
    *)                         echo "Not an archive file!";;
  esac

}}

cmd tar %{{
  printf " Archive file name: "
  read name
  [[ -z "${name##*.tar.*}" ]] || name=$name.tar.gz
  lf -remote "send $id unselect \"$fx\""
  tar acf "$name" $(basename -a $fx)
}}

cmd make_file %{{
  echo -n " [NEW FILE] Enter a file name: "
  read name
  if [[ "$name" == */ ]]; then
    mkdir -p $name
  else
    lf -remote "send $id \$$EDITOR $name"
  fi
}}

cmd delete %{{
  rm -rf "$fx"
  }}

# MAPPINGS
#

map <enter> shell
map J :fzf_jump
map A :tar
map a :make_file
map x :delete
map Z push :autojump<space>
