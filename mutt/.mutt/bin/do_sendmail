#!/bin/bash
export PATH=~/.mutt:$PATH

## Save msg in file to re-use it for multiple tests.
t=`mktemp -t mutt_message.XXXXXX` || exit 3
cat > "$t"

# save email addresses in contacts.yml
~/.mutt/contacts/local -f to,cc,bcc -t "$t"

#
# ## Attachment keywords that the message body will be searched for:
# KEYWORDS='attach|patch|附件|文件'
#
# ## Define test for multipart message.
# function multipart() {
#     grep -q '^Content-Type: multipart' "$t"
# }
#
# ## Define test for keyword search.
# function word-attach() {
#     grep -v '^>' "$t" | grep -E -i -q "$KEYWORDS"
# }
#
# ## define a dialog to confirm sending
# function ask() {
#     # # try to get stdin/stdout/stderr from parent process
#     pid=$$
#     tty=$(ps -o tty= -p $pid)
#     while ! [[ $tty = *t* ]]; do  # at least contain a *t* for pts/tty/etc
#         pid=$(ps -o ppid= -p $pid)
#         tty=$(ps -o tty= -p $pid)
#     done
#     TTY=/dev/$tty
#     # ps -p $pid |grep nonono
#     dialog --defaultno \
#         --title "Attachment Missing" \
#         --yesno "There is no attachment found.\nDo you still want to send anyway?" 0 0 < $TTY > $TTY
# }

# FINAL DECISION:
# if multipart || ! word-attach || ask ; then
#     exit_status=$?
#     # send email
#     "$@" < "$t"
# else
#     echo "No file was attached but a search of the message text suggests there should be one."
#     exit_status=1
# fi

"$@" < "$t"

rm -f "$t"

# exit $exit_status

