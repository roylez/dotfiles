# boolean variables
#
IS_MAC="command -v pbcopy"
IS_VIM="ps -o state= -o comm= -t '#{pane_tty}'| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
IS_LOCAL='test -z "$SSH_CLIENT" -o -f ~/.tmux.local'
IS_256_COLOR="test $(tput colors) -ge 256"

# fix for Mac pbcopy & pbpaste issues
if "command -v zsh" 'set -g default-command zsh'

# do not suspend tmux itself
unbind-key C-z

# change escape to c-a
set -g prefix C-a
unbind-key C-b
bind C-a send-prefix

# F11 and F12 to switch between windows
bind -n F11 previous-window
bind -n F12 next-window
bind -n C-left  previous-window
bind -n C-right next-window

# C-c also create new window, like in screen
bind-key C-c new-window

# (prefix k) to kill window
unbind-key &
unbind-key C-k
unbind-key k
bind-key k confirm-before -p "Do you really want to kill #W? (y/n)"  kill-window

# use r to reload configuration
unbind r
bind r source-file ~/.tmux.conf \; display "Configuration reloaded!"

# Use Vi mode
setw -g mode-keys vi

# use p to paste
# bind -T copy-mode-vi p paste-buffer
# bind -T copy-mode-vi v send -X begin-selection

# Mac paste hacks
# bind -T copy-mode-vi y     if "$IS_MAC" 'send -X copy-pipe-and-cancel "pbcopy"'
# bind -T copy-mode-vi Enter if "$IS_MAC" 'send -X copy-pipe-and-cancel "pbcopy"'
# bind -T copy-mode-vi MouseDragEnd1Pane if "$IS_MAC" 'send -X copy-pipe-and-cancel "pbcopy"'

# use xterm function key sequence
setw -g xterm-keys on

# # More straight forward key bindings for splitting
unbind-key %
bind-key | split-window -h
bind-key h split-window -h
unbind-key '"'
bind-key - split-window -v
bind-key v split-window -v

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
bind-key -n C-h if "$IS_VIM" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if "$IS_VIM" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if "$IS_VIM" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if "$IS_VIM" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if "$IS_VIM" "send-keys C-\\" "select-pane -l"

# Notifying if other windows has activities
set -g visual-bell on
set -g bell-action other

# Terminal emulator window title, set it to off so that we can use zsh to
# operate it
setw -g automatic-rename off

#altscreen
setw -g alternate-screen on

# start index from 1
set -g base-index 1

# set history size
set -g history-limit 20000

# terminal overrides
set -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cs=\E]12;%p1%s\007:Cr=\E]112\007:Ss=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'

if "$IS_256_COLOR" 'set -g default-terminal "tmux-256color"' 'set -g default-terminal "tmux"'

# neovim friendliness
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -g escape-time 10         # setting it to zero might be a little risky
set -g focus-events on

# change message background color
set -g message-style 'fg=magenta,bg=default,bold,reverse'

# Set status bar
set -g status-justify centre
set -g status-bg default
set -g status-right-length 50
set -g status-left-length 20
set -g status-left "#[fg=cyan]:#[fg=blue]:#[fg=red][ #[fg=colour120,bold]#h #[default]#[fg=red]] "
# set window status style
setw -g window-status-format         '#I #T '
setw -g window-status-current-format '#I #T '
# setw -g window-status-format         '#I#{?#{!=:#{window_panes},1},|,} #T '
# setw -g window-status-current-format '#I#{?#{!=:#{window_panes},1},|,} #T '
setw -g window-status-style          'fg=blue,bold,noreverse'
setw -g window-status-current-style  'fg=blue,bold,reverse'
setw -g window-status-bell-style     'fg=yellow,bg=default,bold,reverse'
setw -g window-status-activity-style 'fg=yellow,bg=default,bold,reverse'

# highlight active panel
set -g pane-active-border-fg blue
set -g window-style 'fg=colour66,bg=default'
set -g window-active-style 'fg=colour230,bg=default'

# disable local tmux session key bindings for nested experience
if "$IS_LOCAL" \
  "set -g status-position bottom" \
  "set -g status-position top"
if "command -v tmux_status.sh" \
  'set -g status-right "#[fg=red][ #[fg=colour227,bold]#(tmux_status.sh) #[default]#[fg=red]]#[default]#[fg=blue]:#[fg=cyan]:#[default]"' \
  'set -g status-right "#[fg=blue]:#[fg=cyan]:#[default]"'
bind -n F10 if "$IS_LOCAL" \
  "set prefix None ; set key-table off ; setw window-status-current-style 'fg=red,bg=default,bold,reverse' ; refresh-client -S"
bind -Toff F10 if "$IS_LOCAL" \
  "set -u key-table ; set -u prefix ; setw -u window-status-current-style ; refresh-client -S"

# TPM goodies
#   git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'laktak/extrakto'
# set -g @extrakto_default_opt 'pu'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# # set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-yank'
# # set -g @plugin 'tmux-plugins/tmux-continuum'
#
# run '~/.tmux/plugins/tpm/tpm'
