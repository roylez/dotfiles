# set XCLIP env for clipboard interaction
#
if 'test "$(uname)" = "Darwin"' 'setenv -g XCLIP "pbcopy"' 'setenv -g XCLIP "xclip -in -selection clipboard"'

# fix for Mac pbcopy & pbpaste issues
if "command -v reattach-to-user-namespace" 'set -g default-command "reattach-to-user-namespace -l zsh"'

# do not suspend tmux itself
unbind-key C-z

# change escape to c-a
set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# F11 and F12 to switch between windows
bind-key -n F11 previous-window
bind-key -n F12 next-window

# C-c also create new window, like in screen
bind-key C-c new-window

# (prefix k) to kill window
unbind-key &
unbind-key C-k
unbind-key k
bind-key k confirm-before -p "Do you really want to kill #W? (y/n)"  kill-window

# use r to reload configuration
unbind-key r
bind-key r source-file ~/.tmux.conf \; display "Configuration reloaded!"

# Use Vi mode
setw -g mode-keys vi

# use p to paste
bind-key p paste-buffer

# use xterm function key sequence
setw -g xterm-keys on

# # More straight forward key bindings for splitting
unbind-key %
bind-key | split-window -h
bind-key h split-window -h
unbind-key '"'
bind-key - split-window -v
bind-key v split-window -v

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Notifying if other windows has activities
set -g visual-activity off
setw -g monitor-activity off

# Terminal emulator window title, set it to off so that we can use zsh to
# operate it
setw -g automatic-rename off

#altscreen
setw -g alternate-screen on

# start index from 1
set -g base-index 1

# set history size
set -g history-limit 5000

# terminal overrides
set -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cs=\E]12;%p1%s\007:Cr=\E]112\007:Ss=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'

set -g default-terminal "screen-256color"
# set -g default-terminal "screen"

# neovim friendliness
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -g escape-time 0
set -g focus-events on

# change message background color
set -g message-style 'fg=magenta,bg=default,bold,reverse'

# Set status bar
set -g status-justify centre
set -g status-bg default
set -g status-left-length 50
set -g status-right-length 20
set -g status-right "#[fg=red][ #[fg=colour120,bold]#H #[default]#[fg=red]] #[fg=blue]:#[fg=cyan]:#[default]"

# TASK_COUNT="#[fg=magenta,bold,reverse] #(task '(+DUE or +OVERDUE) +PENDING -waiting' export| jq length) #[default]"
# EMAIL_COUNT="#[fg=green,bold,reverse] #(find $HOME/.canonical/inbox -type f -iregex '.*/[0-9].*$' |wc -l ) #[default]"

# set -g status-left "#[fg=cyan]:#[fg=blue]: #[fg=red][ #[fg=colour227,bold]#(tmux_status.sh) #[default]#[fg=red]]#[default] $TASK_COUNT $EMAIL_COUNT"
set -g status-left "#[fg=cyan]:#[fg=blue]: #[fg=red][ #[fg=colour227,bold]#(tmux_status.sh) #[default]#[fg=red]]#[default] "

# set window status style
setw -g window-status-format         '#I #T '
setw -g window-status-current-format '#I #T '
setw -g window-status-style          'fg=blue,bold,noreverse'
setw -g window-status-current-style  'fg=blue,bold,reverse'
setw -g window-status-bell-style     'fg=red,bg=default,bold,reverse'
setw -g window-status-activity-style 'fg=yellow,bg=default,bold,reverse'

# TPM goodies
#   git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# # set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-yank'
# # set -g @plugin 'tmux-plugins/tmux-continuum'
#
run '~/.tmux/plugins/tpm/tpm'
